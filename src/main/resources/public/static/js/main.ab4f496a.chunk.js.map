{"version":3,"sources":["components/MatchDetailCard.jsx","components/MatchSmallCard.jsx","pages/TeamPage.jsx","components/YearSelector.jsx","pages/MatchPage.jsx","components/TeamTile.jsx","pages/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","fetchMatches","title","value","totalWins","color","totalMatches","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab4f496a.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./MatchDetailCard.scss\";\r\n\r\nexport const  MatchDetailCard = ({teamName, match}) => {\r\n    if(!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1   \r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n    return (\r\n    <div className={isMatchWon ? 'MatchDetailCard won-card' : ' MatchDetailCard lost-card'}>\r\n        <div>\r\n        <span className=\"vs\">vs</span>\r\n        <h1><Link to={otherTeamRoute} >\r\n                    {otherTeam}\r\n                </Link>\r\n        </h1>\r\n        <h2 className=\"match-date\">{match.date}</h2>\r\n        <h3 className=\"match-venue\">at {match.venue}</h3>\r\n        <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result} </h3>\r\n        </div>\r\n        <div className=\"additional-details\">\r\n        <h3>First Innings</h3>\r\n            <p>{match.team1}</p>\r\n        <h3>Second Innings</h3>\r\n            <p>{match.team2}</p>\r\n        <h3>Man of the Match</h3>\r\n            <p>{match.playerOfMatch}</p>\r\n\r\n        <h3>Umpires</h3>\r\n            <p>{match.umpire1}, {match.umpire2}</p>\r\n\r\n        </div>\r\n\r\n    </div>\r\n    );\r\n}","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport   './MatchSmallCard.scss';\r\n\r\nexport const  MatchSmallCard = ({teamName, match}) => {\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1 \r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n    return (\r\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : ' MatchSmallCard lost-card'}>\r\n        <span className=\"vs\">vs</span>\r\n        <h1><Link to={otherTeamRoute} >\r\n                    {otherTeam}\r\n                </Link>\r\n        </h1>\r\n        <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result} </p>\r\n    </div>\r\n    );\r\n}","import { React , useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport './TeamPage.scss';\r\n\r\nexport const  TeamPage = () => {\r\n\r\n    const [team, setTeam] = useState({matches: []});\r\n    const { teamName } = useParams();\r\n\r\n    // In our React app sometimes we want to access the parameters of the current\r\n    //  route in this case useParams hook comes into action.\r\n    \r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`)\r\n                const data = await response.json();\r\n                setTeam(data)\r\n\r\n            };\r\n\r\n            fetchMatches();\r\n        },[teamName]\r\n\r\n    );\r\n\r\n    if(!team || !team.teamName) {\r\n        return <h1>Team not Found 404 :)</h1> \r\n    }\r\n    \r\n    return (\r\n    <div className=\"TeamPage\">\r\n        <div className=\"team-name-section\">\r\n            <h1 className=\"team-name\">{team.teamName}</h1>\r\n        </div>\r\n        <div className=\"win-loss-section\">\r\n            Wins / Losses\r\n        <PieChart\r\n            data={[\r\n                { title: 'Wins', value: team.totalWins, color: '#4da375' },\r\n                { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\r\n            ]}\r\n        />\r\n            </div>\r\n        <div className=\"match-detail-section\">\r\n            <h3>Latest Matches</h3>\r\n            <MatchDetailCard teamName={team.teamName} match={team.matches[0]}/>\r\n        </div>\r\n        \r\n        {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\r\n        <div className=\"more-link\">\r\n        <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\r\n        </div>\r\n    </div>\r\n    );\r\n}","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n    \r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let i = startYear; i <= endYear; i++ ) {\r\n        years.push(i);\r\n    }\r\n\r\n\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n        { years.map(year => (\r\n            <li key={year}>\r\n                <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n            </li>\r\n        )) }\r\n        </ol>\r\n    )\r\n\r\n}","import { React , useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { YearSelector } from '../components/YearSelector';\r\nimport './MatchPage.scss'\r\n\r\n\r\nexport const  MatchPage = () => {\r\n\r\n    const [matches,setMatches] = useState([]);\r\n\r\n    const {teamName, year} = useParams();\r\n\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`)\r\n                const data = await response.json();\r\n                setMatches(data)\r\n\r\n            };\r\n\r\n            fetchMatches();\r\n        \r\n        },[teamName, year]\r\n\r\n    );\r\n\r\n    return (\r\n    <div className=\"MatchPage\">\r\n  \r\n        <div className=\"year-selector\">\r\n            <h3>Select Year</h3>\r\n            <YearSelector teamName={teamName}/>\r\n        </div>\r\n        <div>\r\n        <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n            {\r\n                matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\r\n            }\r\n        </div>\r\n        \r\n    </div>\r\n    );\r\n}","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './TeamTile.scss';\r\n\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n    \r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                <Link to={`/teams/${teamName}`} >\r\n                    {teamName}\r\n                </Link>    \r\n            </h1>\r\n        </div>\r\n    )\r\n}","import { React , useEffect, useState } from 'react';\r\nimport './HomePage.scss';\r\nimport { TeamTile } from '../components/TeamTile';\r\n\r\nexport const  HomePage = () => {\r\n\r\n    const [teams, setTeams] = useState([]);\r\n\r\n    // In our React app sometimes we want to access the parameters of the current\r\n    //  route in this case useParams hook comes into action.\r\n    \r\n    useEffect(\r\n        () => {\r\n            const fetchAllTeams = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`)\r\n                const data = await response.json();\r\n                setTeams(data)\r\n\r\n            };\r\n\r\n            fetchAllTeams();\r\n        \r\n        }, []\r\n\r\n    );\r\n\r\n   \r\n    return (\r\n    <div className=\"HomePage\">\r\n        <div className=\"header-section\">\r\n            <h1 className=\"app-name\">IPL Dashboard</h1>\r\n        </div>\r\n        <div className=\"team-grid\">\r\n            {\r\n                teams.map(team => <TeamTile key={team.teamName} teamName={team.teamName} />)\r\n            }\r\n        </div>\r\n    </div>\r\n    );\r\n}","import './App.scss';\r\nimport { HashRouter as Router,Route, Switch} from 'react-router-dom';\r\nimport { TeamPage } from './pages/TeamPage';\r\nimport { MatchPage } from './pages/MatchPage';\r\nimport { HomePage } from './pages/HomePage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n        <Route path=\"/teams/:teamName/matches/:year\">\r\n          <MatchPage />\r\n        </Route>\r\n        <Route path=\"/teams/:teamName\">\r\n          <TeamPage />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <HomePage />\r\n        </Route>\r\n\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}